/* MIDI based on https://onlinesequencer.net/784044 by user Vulminous_music (https://onlinesequencer.net/members/18589)
   Code generated by Midi to Arduino Converter - Andy Tran (extramaster), https://www.extramaster.net/tools/midiToArduino/ -CC0

   Uses an Active Buzzer Module to play a Chiptunes version of the Harry Potter Theme
   
   ---
   Requires: An Arduino - Leonardo or compatible recommended (https://bit.ly/leonardo-botinabox)
             A Computer with the Arduino IDE or Web Editor installed (https://www.arduino.cc/en/Main/Software)
             A Micro USB Cable (https://bit.ly/microusb-cable-botinabox)
             Three Male-to-Female Dupont Jumper Wires (https://bit.ly/dupont-mtf-botinabox)
             An Active Buzzer Module (https://bit.ly/activebuzzer-botinabox)

   ---
   Setup: Connect the VCC pin on the Buzzer Module to the 3.3V pin on your Arduino.
          Connect the I/O pin on the Buzzer Module to Digital Pin 11 on your Arduino.
          Connect the GND pin on the Buzzer Module to one of the GND pins on your Arduino.

    ---
    License: MIT License 
    
    Copyright (c) 2018 Bot-In-a-Box Educational Robotics
    
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    
    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.       
          
 */


// Set this to be the pin that your buzzer resides in. (Note that you can only have one buzzer actively using the PWM signal at a time).
int tonePin = 11;
void setup() {

}

void midi() {

    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 440, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 587, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 493, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 207, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 246, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 493, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 164, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 440, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 440, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 391, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 493, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 659, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 783, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 739, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 349, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 440, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 587, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 698, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 587, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 349, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 440, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 587, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 698, 25.56815625);
    delay(28.4090625);
    delay(312.4996875);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 587, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 246, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 329, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 415, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 493, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 164, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 164, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 698, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(113.63625);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 329, 51.1363125);
    delay(56.818125);
    tone(tonePin, 622, 51.1363125);
    delay(56.818125);
    delay(170.454375);
    tone(tonePin, 493, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 523, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 261, 102.272625);
    delay(113.63625);
    delay(227.2725);
    tone(tonePin, 329, 102.272625);
    delay(113.63625);
    delay(170.454375);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 391, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 493, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 659, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 783, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 739, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 349, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 440, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 587, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 698, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 587, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 349, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 440, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 587, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 698, 25.56815625);
    delay(28.4090625);
    delay(312.4996875);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(56.818125);
    tone(tonePin, 587, 102.272625);
    delay(113.63625);
    delay(227.2725);
    delay(28.4090625);
    delay(28.4090625);
    delay(28.4090625);
    tone(tonePin, 246, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 329, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 415, 25.56815625);
    delay(28.4090625);
    tone(tonePin, 493, 25.56815625);
    delay(28.4090625);
    delay(482.9540625);
    tone(tonePin, 659, 102.272625);
    delay(113.63625);
    delay(170.454375);
    tone(tonePin, 220, 102.272625);
    delay(113.63625);

}

void loop() {
    // Play midi
    midi();
}


